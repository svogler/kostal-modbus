# Sven
# Global tags can be specified here in key="value" format.
[global_tags]


# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "10s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000

  ## Maximum number of unwritten metrics per output.
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. Maximum flush_interval will be
  ## flush_interval + flush_jitter
  flush_interval = "10s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s.
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
  precision = ""

  ## Log at debug level.
  # debug = false
  ## Log only error level messages.
  # quiet = false

  ## Log file name, the empty string means to log to stderr.
  # logfile = ""

  ## The logfile will be rotated after the time interval specified.  When set
  ## to 0 no time based rotation is performed.
  # logfile_rotation_interval = "0d"

  ## The logfile will be rotated when it becomes larger than the specified
  ## size.  When set to 0 no size based rotation is performed.
  # logfile_rotation_max_size = "0MB"

  ## Maximum number of rotated archives to keep, any older logs are deleted.
  ## If set to -1, no archives are removed.
  # logfile_rotation_max_archives = 5

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################


# Configuration for sending metrics to InfluxDB
[[outputs.influxdb]]
  ## The full HTTP or UDP URL for your InfluxDB instance.
  urls = ["http://192.168.178.22:8086"]

  ## The target database for metrics; will be created as needed.
  ## For UDP url endpoint database needs to be configured on server side.
  database = "telegraf"

  ## The value of this tag will be used to determine the database.  If this
  ## tag is not set the 'database' option is used as the default.
  # database_tag = ""

  ## If true, no CREATE DATABASE queries will be sent.  Set to true when using
  ## Telegraf with a user without permissions to create databases or when the
  ## database already exists.
  # skip_database_creation = false

  ## Name of existing retention policy to write to.  Empty string writes to
  ## the default retention policy.  Only takes effect when using HTTP.
  # retention_policy = ""

  ## Write consistency (clusters only), can be: "any", "one", "quorum", "all".
  ## Only takes effect when using HTTP.
  # write_consistency = "any"

  ## Timeout for HTTP messages.
  # timeout = "5s"

  ## HTTP Basic Auth
  # username = "telegraf"
  # password = "metricsmetricsmetricsmetrics"

  ## HTTP User-Agent
  # user_agent = "telegraf"

  ## UDP payload size is the maximum packet size to send.
  # udp_payload = "512B"

  ## Optional TLS Config for use on HTTP connections.
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false

  ## HTTP Proxy override, if unset values the standard proxy environment
  ## variables are consulted to determine which proxy, if any, should be used.
  # http_proxy = "http://corporate.proxy:3128"

  ## Additional HTTP headers
  # http_headers = {"X-Special-Header" = "Special-Value"}

  ## HTTP Content-Encoding for write request body, can be set to "gzip" to
  ## compress body or "identity" to apply no encoding.
  # content_encoding = "identity"

  ## When true, Telegraf will output unsigned integers as unsigned values,
  ## i.e.: "42u".  You will need a version of InfluxDB supporting unsigned
  ## integer values.  Enabling this option will result in field type errors if
  ## existing data has been written.
  # influx_uint_support = false

[[inputs.modbus]]
  # TCP
  #type = "TCP"
  #controller="192.168.178.58"
  #port = 1502
  #slaveId = 71
  #timeout = 5

  name = "KostalWR"

  ## Slave ID - addresses a MODBUS device on the bus
  ## Range: 0 - 255 [0 = broadcast; 248 - 255 = reserved]
  slave_id = 71

  ## Timeout for each request
  timeout = "1s"

  ## Maximum number of retries and the time to wait between retries
  ## when a slave-device is busy.
  # busy_retries = 0
  # busy_retries_wait = "100ms"

  # TCP - connect via Modbus/TCP
  controller = "tcp://192.168.178.58:1502"

holding_registers = [
   { name = "Total DC power", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [100,101]},
   { name = "State of energy manager", byte_order = "CDAB",   data_type = "UINT32", scale=1.0, address = [104,105]},
   { name = "Home own consumption from battery", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [106,107]},
   { name = "Home own consumption from grid", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [108,109]},
   { name = "Total home consumption Battery", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [110,111]},
   { name = "Total home consumption Grid", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [112,113]},
   { name = "Total home consumption PV", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [114,115]},
   { name = "Home own consumption from PV", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [116,117]},
   { name = "Total home consumption", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [118,119]},
   { name = "Isolation resistance", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [120,121]},
   { name = "Power limit from EVU", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [122,123]},
   { name = "Total home consumption rate", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [124,125]},

   { name = "Worktime", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [144,145]},

   { name = "Current cos phi", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [150,151]},
   { name = "Grid frequency", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [152,153]},
   { name = "Current Phase 1", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [154,155]},
   { name = "Active power Phase 1", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [156,157]},
   { name = "Voltage Phase 1", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [158,159]},

   { name = "Current Phase 2", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [160,161]},
   { name = "Active power Phase 2", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [162,163]},
   { name = "Voltage Phase 2", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [164,165]},

   { name = "Current Phase 3", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [166,167]},
   { name = "Active power Phase 3", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [168,169]},
   { name = "Voltage Phase 3", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [170,171]},

   { name = "Total AC active power", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [172,173]},

   { name = "Total AC apparent power", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [178,179]},

   { name = "Battery charge current", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [190,191]},
   { name = "Number of battery cycles", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [194,195]},

   { name = "PSSB fuse state", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [202,203]},
   { name = "Battery ready flag", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [208,209]},
   { name = "Current state of charge", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [210,211]},
   { name = "Battery temperature", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [214,215]},
   { name = "Cos phi (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [218,219]},
   { name = "Frequency (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [220,221]},

   { name = "Current phase 1 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [222,223]},
   { name = "Active power phase 1 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [224,225]},
   { name = "Reactive power phase 1 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [226,227]},
   { name = "Apparent power phase 1 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [228,229]},
   { name = "Voltage phase 1 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [230,231]},
   { name = "Current phase 2 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [232,233]},
   { name = "Active power phase 2 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [234,235]},
   { name = "Reactive power phase 2 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [236,237]},
   { name = "Apparent power phase 2 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [238,239]},
   { name = "Voltage phase 2 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [240,241]},
   { name = "Current phase 3 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [242,243]},
   { name = "Active power phase 3 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [244,245]},
   { name = "Reactive power phase 3 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [246,247]},
   { name = "Apparent power phase 3 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [248,249]},
   { name = "Voltage phase 3 (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [250,251]},

   { name = "Total active power (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [252,253]},
   { name = "Total reactive power (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [254,255]},
   { name = "Total apparent power (powermeter)", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [256,257]},

   { name = "Current DC1", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [258,259]},
   { name = "Power DC1", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [260,261]},
   { name = "Voltage DC1", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [266,267]},

   { name = "Current DC2", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [268,269]},
   { name = "Power DC2", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [270,271]},
   { name = "Voltage DC2", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [276,277]},

   { name = "Current DC3", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [278,279]},
   { name = "Power DC3", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [280,281]},
   { name = "Voltage DC3", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [286,287]},


   { name = "Total yield", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [320,321]},
   { name = "Daily yield", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [322,323]},
   { name = "Yearly yield", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [324,325]},
   { name = "Monthly yield", byte_order = "CDAB",   data_type = "FLOAT32-IEEE", scale=1.0, address = [326,327]},

   { name = "Battery gross capacity", byte_order = "ABCD",   data_type = "UINT32", scale=1.0, address = [512,513]},
   { name = "Battery current SOC", byte_order = "AB",   data_type = "UINT16", scale=1.0, address = [514]},
   { name = "Work Capacity", byte_order = "ABCD",   data_type = "UINT32", scale=1.0, address = [529,530]},
   { name = "Inverter Max Power", byte_order = "AB",   data_type = "UINT16", scale=1.0, address = [531]},
   { name = "Inverter Generation Power (current)", byte_order = "AB",   data_type = "UINT16", scale=1.0, address = [575]},
   { name = "Generation Energy", byte_order = "ABCD",   data_type = "UINT32", scale=1.0, address = [577,578]},
   { name = "Current battery charge-discharge power", byte_order = "AB",   data_type = "UINT16", scale=1.0, address = [582]},
   { name = "Total DC charge energy", byte_order = "ABCD",   data_type = "UINT32", scale=1.0, address = [1046,1047]}
 ]


